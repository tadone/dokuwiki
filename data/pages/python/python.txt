### Setup ###
To create a virtual environment, decide upon a directory where you want to place it, and run the venv module as a script with the directory path:

<code>python3 -m venv <code_dir></code>
This will create the tutorial-env directory if it doesn’t exist, and also create directories inside it containing a copy of the Python interpreter, the standard library, and various supporting files.

Once you’ve created a virtual environment, you may activate it.

On Windows, run:
<code>
tutorial-env\Scripts\activate.bat
</code>
On Unix or MacOS, run:

<code>source tutorial-env/bin/activate</code>

Now install packages with ''pip''
<code>pip install wxPython</code>
''pip list'' will display all of the packages installed in the virtual environment.

''pip freeze'' will produce a similar list of the installed packages, but the output uses the format that pip install expects. A common convention is to put this list in a requirements.txt file:
<code>pip freeze > requirements.txt</code>
The requirements.txt can then be committed to version control and shipped as part of an application. Users can then install all the necessary packages with install -r:
<code>pip install -r requirements.txt</code>
