====Ansible Help====
Lists all available ansible documentation:
<sxh>ansible-dock -l</sxh>
Info about yum module **("=" means it's required)**
<sxh>ansible-dock <module></sxh>

====Ansible Ad-hoc Commands====
The hosts file consist of servers on which the Ansible will 

<sxh>ansible <host/group/IP> -i <inventory_file> -m ping -u <user> -k</sxh>

''host/group/IP'' host, group or IP as defined in inventory file

|**-i** |inventory file|**-m** |module (ping, yum, user, etc.)|**-u**| user|**-k**| prompt for password|

**Run Yum module to install Apache (httpd)**
<sxh>ansible <group/host> -i inventory_file -m yum -a "name=httpd state=present" --sudo</sxh>

**Enable and start Apache**
<sxh>ansible <group/host> -i inventory_file -m service-a "name=httpd enabled=yes state=started" --sudo</sxh>

**Gather all information about remote host(s)**
<sxh>ansible <group/host> -i inventory_file -m setup</sxh>

**Filter all information (facts) for specifc info**
<sxh>ansible <group/host> -i inventory_file -m setup -a "filter=ansible_eth*"
ansible <group/host> -i inventory_file -m setup -a "filter=ansible_mounts*"</sxh>





====Ansible Terms====

|**Controller Machine**  | the machine where Ansible is installed, responsible for running the provisioning on the servers you are managing|
|**Inventory**| an INI file that contains information about the servers you are managing|
|**Playbook**| the entry point for Ansible provisionings, where the automation is defined through tasks using YAML format Task: a block that defines a single procedure to be executed, e.g.: install a package|
|**Module**| a module typically abstracts a system task, like dealing with packages or creating and changing files. Ansible has a multitude of built-in modules, but you can also create custom ones|
|**Role**| a pre-defined way for organizing playbooks and other files in order to facilitate sharing and reusing portions of a provisioning|
|**Play**| a provisioning executed from start to finish is called a play|
|**Facts**| global variables containing information about the system, like network interfaces or operating system|
|**Handlers**| used to trigger service status changes, like restarting or stopping a service|

====When Statement====
Run command ''when'' a condition is matched:
<sxh bash>tasks:
  - name: "shut down Debian flavored systems"
    command: /sbin/shutdown -t now
    when: ansible_os_family == "Debian"
    # note that Ansible facts and vars like ansible_os_family can be used
    # directly in conditionals without double curly braces</sxh>
Use ''or'' when combining conditionals:
<sxh bash>
tasks:
  - name: "shut down CentOS 6 and Debian 7 systems"
    command: /sbin/shutdown -t now
    when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "6") or
          (ansible_distribution == "Debian" and ansible_distribution_major_version == "7")</sxh>
          
====Facts (System Information)====
Gather facts (info) about remote host:
<sxh bash>ansible hostname.example.com -m setup</sxh>

====Roles====
====Ansible Vault====
Encrypt a file:
<sxh>ansible-vault encrypt encrypt_me.txt</sxh>
Viewing Encrypted Files (prompted for password):
<sxh>ansible-vault view vault.yml</sxh>
View encrypted file using password file:
<sxh>ansible-vault view vault_master.yml --vault-password-file vault.pass</sxh>
Edit encrypted file:
<sxh>ansible-vault edit vault.yml</sxh>